name: Request Release

on:
  push:
    branches:
      - main

permissions:
  issues: write         # Allow creating issues
  contents: write       # Allow pushing changes and tags
  deployments: write    # Allow creating releases

jobs:
  prompt-for-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Current Version
        id: get-version
        run: |
          version=$(grep '^version =' Cargo.toml | head -n 1 | cut -d '"' -f2)
          echo "current=$version" >> $GITHUB_OUTPUT

      - name: Bump Patch Version
        id: bump-version
        run: |
          current="${{ steps.get-version.outputs.current }}"
          IFS='.' read -r major minor patch <<< "$current"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "new=$new_version" >> $GITHUB_OUTPUT

      - name: Update Cargo.toml Version
        run: |
          # Update version in Cargo.toml
          sed -i "s/^version = \".*\"/version = \"${{ steps.bump-version.outputs.new }}\"/" Cargo.toml
          cargo update
          
          # Commit the version change
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "chore: bump version to ${{ steps.bump-version.outputs.new }}"
          git push origin main

      - name: Create Release Approval Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueTitle = `Confirm Release for Commit: ${context.sha}`;
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'release-pending'
            });

            const existing = issues.find(issue => issue.title.includes(context.sha));
            if (!existing) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: `A commit was pushed to \`main\`. Do you want to tag and release a new version?\n\nCommit: \`${context.sha}\``,
                labels: ['release-pending']
              });
            }
