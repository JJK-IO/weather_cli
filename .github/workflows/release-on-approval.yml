name: Release on Approval

on:
  issue_comment:
    types: [created]

jobs:
  release-if-approved:
    if: |
      github.event.comment.body == '/approve-release' &&
      github.event.comment.user.login == 'JJK-IO'
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump-version.outputs.new }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Current Version
        id: get-version
        run: |
          version=$(grep '^version =' Cargo.toml | head -n 1 | cut -d '"' -f2)
          echo "current=$version" >> $GITHUB_OUTPUT

      - name: Bump Patch Version
        id: bump-version
        run: |
          current="${{ steps.get-version.outputs.current }}"
          IFS='.' read -r major minor patch <<< "$current"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "new=$new_version" >> $GITHUB_OUTPUT

      - name: Update Cargo.toml Version
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ steps.bump-version.outputs.new }}\"/" Cargo.toml
          cargo update
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "chore: bump version to ${{ steps.bump-version.outputs.new }}"
          git push origin main

      - name: Add release-approved label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = context.payload.issue.number;
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['release-approved']
            });
            // Close the issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              state: 'closed'
            });

      - name: Tag the new version
        run: |
          git tag "v${{ steps.bump-version.outputs.new }}"
          git push origin "v${{ steps.bump-version.outputs.new }}"

  build-and-release:
    needs: release-if-approved
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: weather_cli
            out_name: weather_cli-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: weather_cli
            out_name: weather_cli-macos

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add target (if cross-compiling)
        run: rustup target add ${{ matrix.target }}

      - name: Build binary
        run: |
          cargo build --release --target ${{ matrix.target }}
          cp target/${{ matrix.target }}/release/${{ matrix.binary }} ${{ matrix.out_name }}
          chmod +x ${{ matrix.out_name }}

      - name: Upload binary to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.release-if-approved.outputs.new_version }}
          files: ${{ matrix.out_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
