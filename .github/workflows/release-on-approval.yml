name: Release on Approval

on:
  issue_comment:
    types: [created]  # Trigger on issue comment creation

jobs:
  release-if-approved:
    if: |
      github.event.comment.body == '/approve-release' && 
      github.event.comment.user.login == 'JJK-IO'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1

      - name: Get Current Version
        id: get-version
        run: |
          version=$(grep '^version =' Cargo.toml | head -n 1 | cut -d '"' -f2)
          echo "current=$version" >> $GITHUB_OUTPUT

      - name: Bump Patch Version
        id: bump-version
        run: |
          current="${{ steps.get-version.outputs.current }}"
          IFS='.' read -r major minor patch <<< "$current"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "new=$new_version" >> $GITHUB_OUTPUT

      - name: Update Cargo.toml Version
        run: |
          # Update version in Cargo.toml
          sed -i "s/^version = \".*\"/version = \"${{ steps.bump-version.outputs.new }}\"/" Cargo.toml
          
          # Commit the version change
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "chore: bump version to ${{ steps.bump-version.outputs.new }}"
          git push origin main

      - name: Add release-approved label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = github.event.issue.number;
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['release-approved']
            });

      - name: Tag the new version
        run: |
          # Tag the new version
          git tag "v${{ steps.bump-version.outputs.new }}"
          git push origin "v${{ steps.bump-version.outputs.new }}"

      - name: Build Release
        run: cargo build --release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump-version.outputs.new }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Binary to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump-version.outputs.new }}
          files: target/release/your_binary_name  # Replace with your actual binary name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
